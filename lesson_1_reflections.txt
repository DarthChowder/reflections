How did viewing a diff between two versions of a file help you see the bug that was introduced?

It was conveniant to only see the things that are different about the two files. This makes it quitea bit easier and quicker to find things that are different and narrow down where issues might be occruing.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

As programs get long, finding differences would become an impossible task.

What do you think are the pros of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

With Git you can be more precise and have a little bit more control over what each commit has, making it easier to understand the changse. With that said, there are more chances for user error and not saving content, because user intervention is required. On the other hand Google auto saving means you will never miss anything, that same fact means that the versions might be cluttered and hard to identify what was being worked on if it saves in the middle of working on something.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while other like Google Docs, treat each file seperately?

Git was created with programming in mind, where mutilple files are necessary to create components of complicated applications. Where Google Docs was created for average users that will mostly perform more simple tasks such as word processing and spreadsheets.

How can you use the commands git log and git diff to view the history of the files?

You can use the git log command to look up the historical changes of the file, and if you want to see what the code that was changed in those commits, you can use the git diff command to view the difference between version.

How might using the version control make your more confident ot make changes that could break something?

Knowing that you can easily check back on code changes, when thing go wrong, means that you can experiment and will always have commits to fall back on.

Now that you have your workspace set up, what do you want to try using Git for?

I want to try and use it for my Android Projects for the Androd Development Scholorship by Google.